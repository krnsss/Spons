@page "/companies"
@using egorDipl.Data.Models
@inject HttpClient Http
@rendermode InteractiveServer
@inject IUserProvider UserProvider

<head>
    <style>
        /* Основные стили из страницы мероприятий */
        body {
            background-color: black;
            color: white;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        /* Фильтры */
        .filters {
            width: 300px;
            padding: 20px;
            background-color: #111;
            border-right: 1px solid #333;
        }

        .filter-section {
            margin-bottom: 20px;
        }

            .filter-section h3 {
                color: #007bff;
                margin-bottom: 10px;
                font-size: 1.2rem;
            }

        .filter-option {
            margin-bottom: 8px;
        }

            .filter-option label {
                display: block;
                margin-bottom: 5px;
            }

            .filter-option select,
            .filter-option input {
                width: 100%;
                padding: 8px;
                background-color: #222;
                color: white;
                border: 1px solid #333;
                border-radius: 4px;
            }

        /* Основной контент */
        .content {
            flex: 1;
            padding: 20px;
        }

        .search-bar {
            margin-bottom: 20px;
            display: flex;
        }

            .search-bar input {
                flex: 1;
                padding: 10px;
                background-color: #222;
                color: white;
                border: 1px solid #333;
                border-radius: 4px 0 0 4px;
            }

            .search-bar button {
                padding: 10px 15px;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 0 4px 4px 0;
                cursor: pointer;
            }

                .search-bar button:hover {
                    background-color: #0056b3;
                }

        /* Карточки компаний */
        .companies-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .company-card {
            background-color: #222;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s;
            position: relative;
        }

            .company-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0, 123, 255, 0.3);
            }

            .company-card h3 {
                color: #007bff;
                margin-top: 0;
                margin-bottom: 10px;
            }

        .company-detail {
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

            .company-detail strong {
                color: #aaa;
            }

        .company-actions {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }

        .btn-edit {
            background-color: #ffc107;
            color: black;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
        }

            .btn-edit:hover {
                background-color: #e0a800;
            }

        .btn-delete {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
        }

            .btn-delete:hover {
                background-color: #c82333;
            }

        /* Кнопки управления (в углу экрана) */
        .admin-actions {
            position: fixed;
            bottom: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
        }

        .admin-btn {
            padding: 10px 15px;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        }

        .add-btn {
            background-color: #28a745;
            color: white;
        }

        /* Модальные окна */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .modal-content {
            background-color: #333;
            color: white;
            padding: 20px;
            border-radius: 8px;
            width: 400px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

            .modal-content h3 {
                margin-top: 0;
            }

        .modal input,
        .modal select,
        .modal button {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #007bff;
            background-color: #222;
            color: white;
        }

        .modal button {
            cursor: pointer;
            background-color: #007bff;
            color: white;
            border: none;
        }

            .modal button:hover {
                background-color: #0056b3;
            }

        .cancel {
            background-color: #6c757d;
        }

            .cancel:hover {
                background-color: #5a6268;
            }

        /* Сортировка */
        .sort-option {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            cursor: pointer;
            padding: 5px;
            border-radius: 4px;
        }

            .sort-option:hover {
                background-color: #333;
            }

            .sort-option input[type="radio"] {
                margin-right: 8px;
            }

            .sort-option.active {
                background-color: #007bff;
                color: white;
            }

        .error-text {
            color: red;
            font-size: 0.8rem;
            margin-top: -5px;
            margin-bottom: 10px;
        }

        .input-error {
            border: 1px solid red !important;
        }
    </style>
</head>

<PageTitle>Компании</PageTitle>

@if (UserProvider.Role != null)
{
    @if (UserProvider.Role.Name != "Пользователь")
    {
        <button class="primary" @onclick="AddCompany">Добавить компанию</button>
    }

}

@if (companies == null)
{
    <p>Загрузка...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Название</th>
                <th>Адрес</th>
                <th>Число событий</th>
                <th>Отзывы</th>
                <th>Рейтинг</th>

                @if (UserProvider.Role != null)
                {
                    @if (UserProvider.Role.Name != "Пользователь")
                    {
                        <th>Действия</th>
                    }

                }
            </tr>
        </thead>
        <tbody>
            @foreach (var company in companies)
            {
                <tr>
                    <td>@company.Id</td>
                    <td>@company.Name</td>
                    <td>@company.Address</td>
                    <td>@company.CountEvents</td>
                    <td>@company.FeedBacksCount</td>
                    <td>@company.Rating</td>

                    @if (UserProvider.Role != null)
                    {
                        @if (UserProvider.Role.Name != "Пользователь")
                        {
                            <td>
                                <button class="edit" @onclick="() => EditCompany(company.Id)">Редактировать</button>
                                <button class="delete" @onclick="() => DeleteCompany(company.Id)">Удалить</button>
                            </td>
                        }

                    }
                </tr>
            }
        </tbody>
    </table>
}


@if (showAddEditDialog)
{
    <div class="modal">
        <div class="modal-content">
            <h3>@(selectedCompany.Id == 0 ? "Добавить компанию" : "Редактировать компанию")</h3>

            <label>Название</label>
            <input @bind="selectedCompany.Name" maxlength="50" oninput="this.value=this.value.replace(/[^A-Za-zА-Яа-яЁё]/g,'')" class="@GetInputClass(selectedCompany.Name)" />
            @if (string.IsNullOrEmpty(selectedCompany.Name))
            {
                <div class="error-text" style="color: red;">Введите корректные данные</div>
            }

            <label>Адрес</label>
            <input @bind="selectedCompany.Address" maxlength="50" oninput="this.value=this.value.replace(/[^A-Za-zА-Яа-яЁё]/g,'')" class="@GetInputClass(selectedCompany.Address)" />
            @if (string.IsNullOrEmpty(selectedCompany.Address))
            {
                <div class="error-text" style="color: red;">Введите корректные данные</div>
            }

            <label>Число событий</label>
            <input @bind="selectedCompany.CountEvents" maxlength="3" oninput="this.value=this.value.replace(/[^0-9]/g,'')" class="@GetInputClass(selectedCompany.CountEvents)" />

            <label>Отзывы</label>
            <input @bind="selectedCompany.FeedBacksCount" maxlength="4" oninput="this.value=this.value.replace(/[^0-9]/g,'')" class="@GetInputClass(selectedCompany.FeedBacksCount)" />

            <label>Рейтинг</label>
            <input @bind="selectedCompany.Rating" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'')" class="@GetInputClass(selectedCompany.Rating)" />

            <button class="save" @onclick="SaveCompany">Сохранить</button>
            <button class="cancel" @onclick="Cancel">Отмена</button>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="error-message" style="color: red;">@errorMessage</div>
            }
        </div>
    </div>
}

@code {
    private List<Company> companies = new();
    private Company selectedCompany = new();
    private bool showAddEditDialog = false;
    private string errorMessage = string.Empty;

    private string GetInputClass(object value)
    {
        if (value == null) return "input-error";
        if (value is int intValue && intValue == 0) return "input-error";
        return string.IsNullOrEmpty(value.ToString()) ? "input-error" : string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadCompanies();
    }

    private async Task LoadCompanies()
    {
        companies = await Http.GetFromJsonAsync<List<Company>>("api/Company");
    }

    private void AddCompany()
    {
        selectedCompany = new Company();
        showAddEditDialog = true;
    }

    private async Task EditCompany(int id)
    {
        selectedCompany = await Http.GetFromJsonAsync<Company>($"api/Company/{id}");
        showAddEditDialog = true;
    }

    private async Task SaveCompany()
    {
        if (string.IsNullOrEmpty(selectedCompany.Name) || string.IsNullOrEmpty(selectedCompany.Name))
        {
            errorMessage += "Поля не должны быть пустыми. ";
            return;
        }

        if (selectedCompany.Name == " " || selectedCompany.Address == " ")
        {
            errorMessage += "Заполните все поля. ";
            return;
        }
        if (selectedCompany.Id == 0)
        {
            await Http.PostAsJsonAsync("api/Company", selectedCompany);
        }
        else
        {
            await Http.PutAsJsonAsync($"api/Company/{selectedCompany.Id}", selectedCompany);
        }

        showAddEditDialog = false;
        await LoadCompanies();
    }

    private async Task DeleteCompany(int id)
    {
        await Http.DeleteAsync($"api/Company/{id}");
        await LoadCompanies();
    }

    private void Cancel()
    {
        showAddEditDialog = false;
    }
}
